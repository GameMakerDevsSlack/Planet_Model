<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Graphics constants

window_set_cursor( cr_default );

//Delta-time modifier
globalvar d_time_mod;
          d_time_mod = 1;

//Create a quaternion. This is actually a ds_list. Since this is the first ds_list, this allows us to set k_global_quaternion = 0 and get away with it!
ds_quaternion_create();

//Use the Juju colour palette for the RYB colour maker
ryb_choose_palette( 2 );

//Create a the RYB look-up table. This is actually a nested ds_list structure. Since this is the second ds_list, this allows us to set k_ryb_table = 1.
ryb_create_lookup_table( 40 );

//Define two null textures
globalvar tex_white;
          tex_white = background_get_texture( bck_white );
globalvar tex_black;
          tex_black = background_get_texture( bck_black );

//A custom user-chosen colour. Used for wnd_colour_picker amongst other things.
globalvar c_user_colour; //Do not make a constant!
          c_user_colour = c_black;
          
//Set AA value based on capabilities of the hardware
globalvar game_aa; //Do not make a constant!
switch( display_aa ) {

    case  2: { game_aa = 2; break; }
    case  6: { game_aa = 4; break; }
    case 12: { game_aa = 8; break; }
    case 14: { game_aa = 8; break; }
    default: { game_aa = 0; break; }
}

//Anti-alias limiter. Game is laggy with x4 or x8
game_aa = min( 2, game_aa );
game_aa = 0;

//Relief list. Defines
globalvar world_relief_list;
          world_relief_list = ds_list_create();

ds_list_add( world_relief_list, ( k_world_relief * 0    ) + 1 ); //Ocean
ds_list_add( world_relief_list, ( k_world_relief * 0.2  ) + 1 ); //Coast
ds_list_add( world_relief_list, ( k_world_relief * 0.4  ) + 1 ); //Lowland
ds_list_add( world_relief_list, ( k_world_relief * 0.6  ) + 1 ); //Hills
ds_list_add( world_relief_list, ( k_world_relief * 0.8  ) + 1 ); //Mountains
ds_list_add( world_relief_list, ( k_world_relief * 1    ) + 1 ); //Summit

//Toe-in list
globalvar world_toe_in_list;
          world_toe_in_list = ds_list_create();

ds_list_add( world_toe_in_list, 0    ); //Ocean
ds_list_add( world_toe_in_list, 0    ); //Coast
ds_list_add( world_toe_in_list, 0    ); //Lowland
ds_list_add( world_toe_in_list, 0    ); //Hills
ds_list_add( world_toe_in_list, 0    ); //Mountains
ds_list_add( world_toe_in_list, 0    ); //Summit
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Terrain constants

 //Do not make these constants!
 
globalvar terrain_height_minimum;
          terrain_height_minimum = 1;

globalvar terrain_height_maximum;
          terrain_height_maximum = 5;

globalvar terrain_height_smoothing;
          terrain_height_smoothing = 0.3;




globalvar terrain_water;
          terrain_water = 0.4;

globalvar terrain_hills;
          terrain_hills = 0.25;

globalvar terrain_mountains;
          terrain_mountains = 0.005;

globalvar terrain_lowland;
          terrain_lowland = 1 - ( terrain_water + terrain_hills + terrain_mountains );




globalvar terrain_temperature_itcz;
          terrain_temperature_itcz = 0.15;

globalvar terrain_temperature_height;
          terrain_temperature_height = 45;

globalvar terrain_temperature_latitude;
          terrain_temperature_latitude = 45;

globalvar terrain_temperature_random;
          terrain_temperature_random = 100 - ( terrain_temperature_height + terrain_temperature_latitude );

globalvar terrain_temperature_ice;
          terrain_temperature_ice = 0.05;

globalvar terrain_temperature_cold;
          terrain_temperature_cold = 0.15;

globalvar terrain_temperature_warm;
          terrain_temperature_warm = 0.4;

globalvar terrain_temperature_hot;
          terrain_temperature_hot = 1 - ( terrain_temperature_ice + terrain_temperature_cold + terrain_temperature_warm );




globalvar terrain_wetness_small;
          terrain_wetness_small = 2;

globalvar terrain_wetness_large;
          terrain_wetness_large = 10;

globalvar terrain_wetness_dry;
          terrain_wetness_dry = 0.25;

globalvar terrain_wetness_wet;
          terrain_wetness_wet = 0.2;

globalvar terrain_wetness_damp;
          terrain_wetness_damp = 1 - ( terrain_wetness_dry + terrain_wetness_wet );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gameplay constants

globalvar turn_move_incr;
          turn_move_incr = 1 / 30;

globalvar turn_pause_incr;
          turn_pause_incr = 1 / 10;

//Set the seed
randomize();
globalvar world_seed;
          world_seed = 100; //Do not make a constant!
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Usability constants

//Whether or not the camera can be controlled by the keyboard
globalvar camera_keyboard_movement;
          camera_keyboard_movement = true; //Do not make a constant!

//Show the FPS counter
globalvar show_fps;
          show_fps = false; //Do not make a constant!

globalvar fancy_sun;
          fancy_sun = true;

globalvar fancy_lighting;
          fancy_lighting = true;
          
globalvar fancy_stars;
          fancy_stars = true;

//If the user goes over a path causes it to pop up
//A path will always pop if the player mouses over an army
globalvar over_over_path_pop;
          over_over_path_pop = false; //Do not make a constant!

globalvar mouse_dead_zone;
          mouse_dead_zone = 6;

globalvar mouse_window_scroll_speed;
          mouse_window_scroll_speed = 0.07;

globalvar seed_regen_delay;
          seed_regen_delay = 210;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Networking constants

//Try to maintain some kind of backwards compatibility
globalvar networking_version;
          networking_version = 0;

globalvar game_mechanics_version;
          game_mechanics_version = 0;

//General packet-handling buffer / socket
globalvar multiplayer_buffer;
          multiplayer_buffer = buffer_create( 4096, buffer_grow, 1 );

globalvar multiplayer_large_buffer;
          multiplayer_large_buffer = buffer_create( 4096, buffer_grow, 1 );
             
globalvar multiplayer_port;
          multiplayer_port = 899;
          
globalvar multiplayer_socket; //This is used in the packet_ scripts. Do not make a constant!
          multiplayer_socket = noone;
          
globalvar multiplayer_server_ip; //Do not make a constant!
          multiplayer_server_ip = "127.0.0.1";
          
globalvar multiplayer_public_ip; //Do not make a constant!
          multiplayer_public_ip = "127.0.0.1";
          
globalvar multiplayer_local_ip; //Do not make a constant!
          multiplayer_local_ip = "127.0.0.1";

//Client handling values
globalvar multiplayer_max_client_limit;
          multiplayer_max_client_limit = 20;
          
globalvar multiplayer_client_limit;
          multiplayer_client_limit = multiplayer_max_client_limit;
          
//Ticket action values
globalvar tkt_ping;
          tkt_ping = 100;

globalvar tkt_ping_timeout;
          tkt_ping_timeout = 101;  

globalvar tkt_request_seed;
          tkt_request_seed = 200;   

globalvar tkt_check_start;
          tkt_check_start = 201;

//Time out values
globalvar client_req_ping_time;
          client_req_ping_time = 4000;

globalvar server_req_ping_time;
          server_req_ping_time = 4000;

globalvar client_check_server_timeout;
          client_check_server_timeout = 8000;

globalvar server_check_client_timeout;
          server_check_client_timeout = 8000;

          
//Maximum numbers of human players
globalvar req_ping_msg;
          req_ping_msg = 0001;

globalvar send_ping_msg;
          send_ping_msg = 0002;

globalvar send_chat_msg;
          send_chat_msg = 0003;

globalvar client_req_handshake_msg;
          client_req_handshake_msg = 1002;
          
globalvar client_finished_regen_msg;
          client_finished_regen_msg = 1010;
          
globalvar client_started_msg;
          client_started_msg = 1011;
          
globalvar server_rejection_msg;
          server_rejection_msg = 2001;

globalvar server_send_handshake_msg;
          server_send_handshake_msg = 2002;

globalvar server_regenerate_msg;
          server_regenerate_msg = 2010;

globalvar server_start_msg;
          server_start_msg = 2011;

globalvar send_list_msg;
          send_list_msg = 0004;


//List replacement tags
globalvar msg_list_test;
          msg_list_test = 0001;
          
globalvar msg_list_terrain_height;
          msg_list_terrain_height  = 0011;
          
globalvar msg_list_terrain_wetness;
          msg_list_terrain_wetness = 0012;
          
globalvar msg_list_terrain_tempr;
          msg_list_terrain_tempr   = 0013;
          
globalvar msg_list_terrain_tree;
          msg_list_terrain_tree    = 0014;
          
globalvar msg_list_terrain_feature;
          msg_list_terrain_feature = 0015;
          
globalvar msg_list_terrain_colour;
          msg_list_terrain_colour  = 0016;
          
globalvar msg_list_terrain_seed;
          msg_list_terrain_seed    = 0017;
          
globalvar msg_list_terrain_light;
          msg_list_terrain_light   = 0018;
          
globalvar msg_list_terrain_rim;
          msg_list_terrain_rim     = 0019;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise the ENTIRE GAME

//Begin the log
globalvar log;
          log = ds_list_create();

ds_list_add( log, "~~~ game init" );

//Begin chat
globalvar chat;
          chat = ds_list_create();

globalvar chat_str;
          chat_str = "";

//Finds our public IP
instance_create( 0, 0, obj_get_ip );

//Draws the globe
instance_create( 0, 0, obj_camera );

//Draws the mouse, window border, FPS counter etc
instance_create( 0, 0, obj_gui_layer );

//Handles windows and window drawing
instance_create( 0, 0, obj_window_layer );

scr_open_main_menu();
//scr_window_create( wnd_log, obj_window_layer.id,   noone, noone, noone, noone );

//Create a world. Generation stuff lives in this object
instance_create( 0, 0, obj_world );





/*
url_open( "https://www.facebook.com/dialog/feed?app_id=1457029291264741&amp;redirect_uri=https://www.reddit.com/r/gamemaker/&amp;description=An%20example%20caption&amp;link=https://www.reddit.com/r/gamemaker/" );

https://developers.facebook.com/docs/sharing/reference/feed-dialog/v2.4

url_open( "https://twitter.com/intent/tweet?text=test" );
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
