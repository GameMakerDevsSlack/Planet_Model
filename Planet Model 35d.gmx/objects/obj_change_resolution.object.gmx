<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise

step_number = 0;

width = view_wview[0];
height = view_hview[0];

fullscreen = window_get_fullscreen();

old_width = width;
old_height = height;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do stuff
//With thanks to TheWinslow
//http://www.reddit.com/r/gamemaker/comments/372ble/tutorial_in_game_resolution_control/

var i, inst, xx, yy;

switch( step_number ) {//each case is a different step.

    case 0: {
        //display_reset( game_aa, true ); //not too surprising that resetting the display comes first. Only necessary if you give players the option to change aa and vsync in game
        break;
    }
    
    case 1: {
        window_set_size( width, height ); //this is the only function that needs to run on a separate step. I've found it will not work correctly if used in the same step as the other functions
        window_set_position( ( display_get_width() - width ) * 0.5, ( display_get_height() - height ) * 0.5 );
        
        break;
    }

    case 2: {
        window_set_fullscreen( fullscreen ); //if setting it to fullscreen (true), window_set_size() won't have any effect.
        
        for( i = 0; i &lt; instance_number( par_window ); i++ ) {
            inst = instance_find( par_window, i );
            
            if ( inst.parent == obj_window_layer.id ) {
                xx = ( inst.window_screen_x + inst.window_width * 0.5 ) - ( old_width * 0.5 );
                xx *= width / old_width;
                xx += ( width * 0.5 ) - ( inst.window_width * 0.5 );
                
                yy = ( inst.window_screen_y + inst.window_height * 0.5 ) - ( old_height * 0.5 );
                yy *= height / old_height;
                yy += ( height * 0.5 ) - ( inst.window_height * 0.5 );
                
                scr_window_move( inst, xx, yy );
                scr_window_update_position( inst );
            }
        }
        
        break;
    }
    
    case 3: {
        surface_resize( application_surface, width, height ); //This will resize the application surface so that it fills the screen/window correctly. Only use this along with views.
        view_wview[0] = width;
        view_hview[0] = height;
        display_set_gui_size( width, height ); //resize the gui to fit the new resolution so any draw GUI events will appear in the correct place.
        
        break;
    }
    
    default: {
        instance_destroy(); //destroy the instance for all other values of step_number
        break;
    }
    
}

++step_number; //increment step number so it will cycle through all the cases
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
