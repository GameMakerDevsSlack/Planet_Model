<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_window</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

window_width = 700;
window_height = 550;

window_local_x = ( view_wview[0] -  window_width ) / 2;
window_local_y = ( view_hview[0] - window_height ) / 2;

window_closeable = true;
window_acceptable = true;
window_moveable = true;

scr_window_add_button( btn_seed, id, 20, 20 );

column_a = 20;
column_b = 350;



row_a =  70;
row_b = 100;
row_c = 150;
row_d = 180;

scr_window_add_button( btn_height_min_down, id, column_a     , row_a );
scr_window_add_button( btn_height_min_up,   id, column_a + 30, row_a );

scr_window_add_button( btn_height_max_down, id, column_b     , row_a );
scr_window_add_button( btn_height_max_up,   id, column_b + 30, row_a );

scr_window_add_button( btn_height_smoothing_down, id, column_a     , row_b );
scr_window_add_button( btn_height_smoothing_up,   id, column_a + 30, row_b );

scr_window_add_button( btn_water_down, id, column_a     , row_c );
scr_window_add_button( btn_water_up,   id, column_a + 30, row_c );

scr_window_add_button( btn_lowland_down, id, column_b     , row_c );
scr_window_add_button( btn_lowland_up,   id, column_b + 30, row_c );

scr_window_add_button( btn_hills_down, id, column_a     , row_d );
scr_window_add_button( btn_hills_up,   id, column_a + 30, row_d );

scr_window_add_button( btn_mountains_down, id, column_b     , row_d );
scr_window_add_button( btn_mountains_up,   id, column_b + 30, row_d );



row_e = 240;
row_f = 270;
row_g = 320;
row_h = 350;

scr_window_add_button( btn_itcz_down, id, column_a     , row_e );
scr_window_add_button( btn_itcz_up,   id, column_a + 30, row_e );

scr_window_add_button( btn_temperature_latitude_down, id, column_b     , row_e );
scr_window_add_button( btn_temperature_latitude_up,   id, column_b + 30, row_e );

scr_window_add_button( btn_temperature_height_down, id, column_a     , row_f );
scr_window_add_button( btn_temperature_height_up,   id, column_a + 30, row_f );

scr_window_add_button( btn_temperature_random_down, id, column_b     , row_f );
scr_window_add_button( btn_temperature_random_up,   id, column_b + 30, row_f );

scr_window_add_button( btn_temperature_ice_down, id, column_a     , row_g );
scr_window_add_button( btn_temperature_ice_up,   id, column_a + 30, row_g );

scr_window_add_button( btn_temperature_cold_down, id, column_b     , row_g );
scr_window_add_button( btn_temperature_cold_up,   id, column_b + 30, row_g );

scr_window_add_button( btn_temperature_warm_down, id, column_a     , row_h );
scr_window_add_button( btn_temperature_warm_up,   id, column_a + 30, row_h );

scr_window_add_button( btn_temperature_hot_down, id, column_b     , row_h );
scr_window_add_button( btn_temperature_hot_up,   id, column_b + 30, row_h );



row_i = 410;
row_j = 460;
row_k = 490;

scr_window_add_button( wetness_small_down_btn, id, column_a     , row_i );
scr_window_add_button( wetness_small_up_btn,   id, column_a + 30, row_i );

scr_window_add_button( wetness_large_down_btn, id, column_b     , row_i );
scr_window_add_button( wetness_large_up_btn,   id, column_b + 30, row_i );

scr_window_add_button( wetness_dry_down_btn, id, column_a     , row_j );
scr_window_add_button( wetness_dry_up_btn,   id, column_a + 30, row_j );

scr_window_add_button( wetness_damp_down_btn, id, column_b     , row_j );
scr_window_add_button( wetness_damp_up_btn,   id, column_b + 30, row_j );

scr_window_add_button( wetness_wet_down_btn, id, column_a     , row_k );
scr_window_add_button( wetness_wet_up_btn,   id, column_a + 30, row_k );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw some stuff

scr_window_pre_draw();

draw_set_color( c_window_border );
draw_line( 40, 60, window_width - 40, 60 );

draw_set_color( c_window_text );
draw_set_font( fnt_default );
draw_set_halign( fa_left );

draw_text( column_a + 60, row_a, "Min. terrain feature size: " + string( terrain_height_minimum ) );
draw_text( column_b + 60, row_a, "Max. terrain feature size: " + string( terrain_height_maximum ) );
draw_text( column_a + 60, row_b, "Terrain smoothing: " + string( floor( terrain_height_smoothing * 100 ) ) + "%" );
draw_text( column_a + 60, row_c, "Water and oceans: " + string( floor( terrain_water * 100 ) ) + "%" );
draw_text( column_b + 60, row_c, "Plains: " + string( floor( terrain_lowland * 100 ) ) + "%" );
draw_text( column_a + 60, row_d, "Hills: " + string( floor( terrain_hills * 100 ) ) + "%" );
draw_text( column_b + 60, row_d, "Mountains: " + string( floor( terrain_mountains * 100 ) ) + "%" );

draw_set_color( c_window_border );
draw_line( 40, mean( row_d, row_e ) + 15, window_width - 40, mean( row_d, row_e ) + 15 );

draw_set_color( c_window_text );
draw_text( column_a + 60, row_e, "Equatorial cloudiness: " + string( terrain_temperature_itcz ) );
draw_text( column_b + 60, row_e, "Latitude tempr. bias: " + string( terrain_temperature_latitude ) + "%" );
draw_text( column_a + 60, row_f, "Height tempr. bias: " + string( terrain_temperature_height ) + "%" );
draw_text( column_b + 60, row_f, "Tempr. randomness: " + string( terrain_temperature_random ) + "%" );
draw_text( column_a + 60, row_g, "Icy: " + string( floor( terrain_temperature_ice * 100 ) ) + "%" );
draw_text( column_b + 60, row_g, "Chilly: " + string( floor( terrain_temperature_cold * 100 ) ) + "%" );
draw_text( column_a + 60, row_h, "Warm: " + string( floor( terrain_temperature_warm * 100 ) ) + "%" );
draw_text( column_b + 60, row_h, "Sunny: " + string( floor( terrain_temperature_hot * 100 ) ) + "%" );

draw_set_color( c_window_border );
draw_line( 40, mean( row_h, row_i ) + 15, window_width - 40, mean( row_h, row_i ) + 15 );

draw_set_color( c_window_text );
draw_text( column_a + 60, row_i, "Local rainfall size: " + string( terrain_wetness_small ) );
draw_text( column_b + 60, row_i, "Far rainfall size: " + string( terrain_wetness_large ) );
draw_text( column_a + 60, row_j, "Dry: " + string( floor( terrain_wetness_dry * 100 ) ) + "%" );
draw_text( column_b + 60, row_j, "Damp: " + string( floor( terrain_wetness_damp * 100 ) ) + "%" );
draw_text( column_a + 60, row_k, "Rainy: " + string( floor( terrain_wetness_wet * 100 ) ) + "%" );

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
